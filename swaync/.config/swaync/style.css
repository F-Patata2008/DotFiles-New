/* Import pywal colors */
@import "/home/F-Patata/.cache/wal/colors-waybar.css";

/* --- Define our color scheme --- */
@define-color bar-bg rgba(26, 27, 38, 0.85);
@define-color module-bg rgba(0, 0, 8, .7);
@define-color text-main #c0caf5;
@define-color border-color rgba(192, 202, 245, 0.1);
@define-color button-hover-bg #11111b;

/* --- Main Window (Control Center) --- */
.control-center {
  background-color: @bar-bg;
  border-radius: 9px;
  border: 1px solid @border-color;
  padding: 8px;
}

/*
 * --- THE REAL, FINAL FIX ---
 * Target the anonymous GTK "box" element that holds each widget.
 * This is the element that controls the layout spacing.
*/
.widget-container > box {
  margin-bottom: 3px;
}

/* Remove the margin from the very last box to prevent extra space */
.widget-container > box:last-child {
  margin-bottom: 0;
}

/* --- General Widget Theming --- */
/* Now we can style the .widget class for looks, not for layout */
.widget {
    background-color: @module-bg;
    color: @text-main;
    border-radius: 9px;
    padding: 6px 10px;
    /* Remove any margins we tried before, as they are not needed */
    margin: 0;
}

/* --- Specifics for a Tighter Look --- */
.widget-buttons-grid {
    padding: 4px;
}

.widget-buttons-grid flowboxchild > button {
  border-radius: 9px;
  padding: 4px 8px;
  background-color: transparent;
  border: none;
}

.widget-buttons-grid flowboxchild > button:hover {
  background-color: @button-hover-bg;
}

/* Reset internal MPRIS player margin from default theme */
.widget-mpris .widget-mpris-player {
    margin: 0;
    padding: 8px;
}

/* --- Notifications Area --- */
.widget-notifications {
  background-color: transparent;
  padding: 0;
}

.notification {
  background-color: @module-bg;
  border-radius: 9px;
  padding: 10px;
  margin-top: 3px;
}
